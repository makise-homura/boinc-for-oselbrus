diff -ru a/simd-support/avx2.c b/simd-support/avx2.c
--- a/simd-support/avx2.c       2018-05-24 15:03:22.000000000 +0300
+++ b/simd-support/avx2.c       2019-06-14 21:14:03.539643100 +0300
@@ -23,6 +23,15 @@

 #if HAVE_AVX2

+#if defined (__e2k__)
+
+int X(have_simd_avx2_128)(void)
+{
+    return 1;
+}
+
+#else
+
 #if defined(__x86_64__) || defined(_M_X64) || defined(_M_AMD64)
 #    include "amd64-cpuid.h"
 #else
@@ -54,6 +63,8 @@
     return res;
 }

+#endif
+
 int X(have_simd_avx2)(void)
 {
   /*
@@ -65,4 +76,5 @@
    */
   return X(have_simd_avx2_128)();
 }
+
 #endif
diff -ru a/simd-support/avx.c b/simd-support/avx.c
--- a/simd-support/avx.c        2018-05-24 15:03:22.000000000 +0300
+++ b/simd-support/avx.c        2019-06-14 21:15:27.409643100 +0300
@@ -23,6 +23,15 @@

 #if HAVE_AVX

+#if defined(__e2k__)
+
+int X(have_simd_avx)(void)
+{
+    return 1;
+}
+
+#else
+
 #if defined(__x86_64__) || defined(_M_X64) || defined(_M_AMD64)
 #    include "amd64-cpuid.h"
 #else
@@ -51,4 +60,5 @@
 }

 #endif
+#endif

diff -ru a/simd-support/simd-avx2.h b/simd-support/simd-avx2.h
--- a/simd-support/simd-avx2.h  2018-05-24 15:03:22.000000000 +0300
+++ b/simd-support/simd-avx2.h  2019-06-16 01:36:54.769643100 +0300
@@ -196,7 +196,7 @@
 
  Force the use of vmovapd via asm until compilers stabilize.
  */
-#if defined(__GNUC__)
+#if defined(__GNUC__) && ! defined (__e2k__)
  __m128d var;
  __asm__("vmovapd %1, %0\n" : "=x"(var) : "m"(x[0]));
  return var;
diff -ru a/simd-support/simd-avx.h b/simd-support/simd-avx.h
--- a/simd-support/simd-avx.h   2018-05-24 15:03:22.000000000 +0300
+++ b/simd-support/simd-avx.h   2019-06-15 23:45:55.919643100 +0300
@@ -192,7 +192,7 @@
 
  Force the use of vmovapd via asm until compilers stabilize.
  */
-#if defined(__GNUC__)
+#if defined(__GNUC__) && ! defined (__e2k__)
  __m128d var;
  __asm__("vmovapd %1, %0\n" : "=x"(var) : "m"(x[0]));
  return var;
diff -ru a/simd-support/simd-sse2.h b/simd-support/simd-sse2.h
--- a/simd-support/simd-sse2.h  2018-05-24 15:03:22.000000000 +0300
+++ b/simd-support/simd-sse2.h  2019-06-14 21:22:24.469643100 +0300
@@ -140,7 +140,7 @@
 {
      V var;
      (void)aligned_like; /* UNUSED */
-#  ifdef __GNUC__
+#  if defined (__GNUC__) && ! defined (__e2k__)
      /* We use inline asm because gcc-3.x generates slow code for
        _mm_loadh_pi().  gcc-3.x insists upon having an existing variable for
        VAL, which is however never used.  Thus, it generates code to move
diff -ru a/simd-support/sse2.c b/simd-support/sse2.c
--- a/simd-support/sse2.c       2018-05-24 15:03:22.000000000 +0300
+++ b/simd-support/sse2.c       2019-06-14 21:11:03.629643100 +0300
@@ -29,7 +29,7 @@

 #if HAVE_SSE2

-# if defined(__x86_64__) || defined(_M_X64) || defined(_M_AMD64)
+# if defined(__x86_64__) || defined(_M_X64) || defined(_M_AMD64) || defined (__e2k__)

   int X(have_simd_sse2)(void)
   {

